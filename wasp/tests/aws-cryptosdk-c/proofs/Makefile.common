# Compilation variables
CC=clang
CFLAGS=-emit-llvm -g -O0 -ffreestanding --target=wasm32 -c -m32 $(INCLUDE)
OPT=opt
OPT_FLAGS=-O1
LLC=llc
LLC_FLAGS=-O1 -march=wasm32 -filetype=obj
LD=wasm-ld
LD_FLAGS=-error-limit=0 --no-entry --export-all

# Libc summaries
LIB=../../lib
BUILD_DIR=../../_build
# Includes
INCLUDE += -I$(LIB)/
INCLUDE += -I../../include/
# Sources root dir
SOURCES=../../source

# target we want to build
TARGET=$(addprefix $(BUILD_DIR)/test/$(HARNESS_ENTRY)/,$(HARNESS_ENTRY))

# Helpers
rwildcard=$(foreach d,$(wildcard $(1:=/*)),$(call rwildcard,$d,$2) $(filter $(subst *,%,$2),$d))

# Necessary sources to compile
libc  := $(wildcard $(LIB)/*.c)
libbc := $(addprefix $(BUILD_DIR)/lib/,$(notdir $(libc:.c=.bc)))
libo  := $(addprefix $(BUILD_DIR)/lib/,$(notdir $(libc:.c=.o)))

opensslc  := $(wildcard $(SOURCES)/openssl/*.c)
opensslbc := $(addprefix $(BUILD_DIR)/source/openssl/,$(notdir $(opensslc:.c=.bc)))
opensslo  := $(addprefix $(BUILD_DIR)/source/openssl/,$(notdir $(opensslc:.c=.o)))

commonc  := $(wildcard $(SOURCES)/common/*.c )
commonbc := $(addprefix $(BUILD_DIR)/source/common/,$(notdir $(commonc:.c=.bc)))
commono  := $(addprefix $(BUILD_DIR)/source/common/,$(notdir $(commonc:.c=.o)))

# I'm stuck here
cryptosdkc  := $(wildcard $(SOURCES)/cryptosdk/*.c)
cryptosdkbc := $(addprefix $(BUILD_DIR)/source/cryptosdk/,$(notdir $(cryptosdkc:.c=.bc)))
cryptosdko  := $(addprefix $(BUILD_DIR)/source/cryptosdk/,$(notdir $(cryptosdkc:.c=.o)))

stubsc  := $(wildcard $(SOURCES)/*.c)
stubsbc := $(addprefix $(BUILD_DIR)/source/,$(notdir $(stubsc:.c=.bc)))
stubso  := $(addprefix $(BUILD_DIR)/source/,$(notdir $(stubsc:.c=.o)))

default: all

all: $(BUILD_DIR)/tests/$(HARNESS_ENTRY)/$(HARNESS_FILE:.c=.wasm)

$(BUILD_DIR)/tests/$(HARNESS_ENTRY)/%.wat: $(BUILD_DIR)/tests/$(HARNESS_ENTRY)/%.wasm
	@echo "Building $@..."
	@wasm2wat $< -o $@

$(BUILD_DIR)/tests/$(HARNESS_ENTRY)/%.wasm: $(BUILD_DIR)/tests/$(HARNESS_ENTRY)/%.o $(libo) $(opensslo) $(commono) $(cryptosdko) $(stubso)
	@echo "Building $@..."
	@echo "$(LD) $(LD_FLAGS) $^ -o $@"; $(LD) $(LD_FLAGS) $^ -o $@

$(BUILD_DIR)/tests/$(HARNESS_ENTRY)/%.o: $(BUILD_DIR)/tests/$(HARNESS_ENTRY)/%.bc
	@echo "Building $@..."
	@$(OPT) $(OPT_FLAGS) $< -o $<
	@$(LLC) $(LLC_FLAGS) $< -o $@

$(BUILD_DIR)/tests/$(HARNESS_ENTRY)/%.bc: %.c
	@mkdir -p $(dir $@)
	@echo "Building $@..."
	@$(CC) $(CFLAGS) -o $@ $<

$(BUILD_DIR)/lib/%.bc: $(LIB)/%.c
	@mkdir -p $(dir $@)
	@echo "Building $@..."
	@$(CC) $(CFLAGS) -o $@ $< > /dev/null 2>&1

$(BUILD_DIR)/lib/%.o: $(BUILD_DIR)/lib/%.bc
	@echo "Building $@..."
	@$(OPT) $(OPT_FLAGS) $< -o $<
	@$(LLC) $(LLC_FLAGS) $< -o $@

$(BUILD_DIR)/source/openssl/%.bc: $(SOURCES)/openssl/%.c
	@mkdir -p $(dir $@)
	@echo "Building $@..."
	@$(CC) $(CFLAGS) -o $@ $< > /dev/null 2>&1

$(BUILD_DIR)/source/openssl/%.o: $(BUILD_DIR)/source/openssl/%.bc
	@echo "Building $@..."
	@$(OPT) $(OPT_FLAGS) $< -o $<
	@$(LLC) $(LLC_FLAGS) $< -o $@

$(BUILD_DIR)/source/common/%.bc: $(SOURCES)/common/%.c
	@mkdir -p $(dir $@)
	@echo "Building $@..."
	@$(CC) $(CFLAGS) -o $@ $< > /dev/null 2>&1

$(BUILD_DIR)/source/common/%.o: $(BUILD_DIR)/source/common/%.bc
	@echo "Building $@..."
	@$(OPT) $(OPT_FLAGS) $< -o $<
	@$(LLC) $(LLC_FLAGS) $< -o $@

$(BUILD_DIR)/source/cryptosdk/%.bc: $(SOURCES)/cryptosdk/%.c
	@mkdir -p $(dir $@)
	@echo "Building $@..."
	@$(CC) $(CFLAGS) -o $@ $< > /dev/null 2>&1

$(BUILD_DIR)/source/cryptosdk/%.o: $(BUILD_DIR)/source/cryptosdk/%.bc
	@echo "Building $@..."
	@$(OPT) $(OPT_FLAGS) $< -o $<
	@$(LLC) $(LLC_FLAGS) $< -o $@

$(BUILD_DIR)/source/%.bc: $(SOURCES)/%.c
	@mkdir -p $(dir $@)
	@echo "Building $@..."
	@$(CC) $(CFLAGS) -o $@ $< > /dev/null 2>&1

$(BUILD_DIR)/source/%.o: $(BUILD_DIR)/source/%.bc
	@echo "Building $@..."
	@$(OPT) $(OPT_FLAGS) $< -o $<
	@$(LLC) $(LLC_FLAGS) $< -o $@

clean:
	@echo "rm -rf $(BUILD_DIR)"; rm -rf $(BUILD_DIR)
