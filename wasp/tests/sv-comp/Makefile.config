CC=clang
CFLAGS=-emit-llvm -g -O0 -ffreestanding --target=wasm32 -c -m32 $(INCLUDES) -fbracket-depth=512 -Wno-attributes
LD=wasm-ld

LIB=../../lib
BUILD_DIR := ../../_build/$(shell basename $(shell pwd))

INCLUDES += -I$(LIB)

lib   := $(wildcard $(LIB)/*.c)
libbc := $(addprefix $(BUILD_DIR)/lib/,$(notdir $(lib:.c=.bc)))
libo  := $(addprefix $(BUILD_DIR)/lib/,$(notdir $(lib:.c=.o)))

tests   := $(wildcard *.c)
testsbc := $(addprefix $(BUILD_DIR)/,$(tests:.c=.bc))
testso  := $(addprefix $(BUILD_DIR)/,$(tests:.c=.o))

.PHONY: clean

.SECONDARY: $(libo)

default: all

all: $(testso:.o=.wat) $(testso:.o=.yml)

$(BUILD_DIR)/%.bc: %.c $(libbc)
	@mkdir -p $(dir $@)
	@echo "Building $@"
	@$(CC) $(CFLAGS) -o $@ $<

$(BUILD_DIR)/%.o: $(BUILD_DIR)/%.bc $(libo)
	@echo "Building $@"
	@opt -O1 $< -o $<
	@llc -O1 -march=wasm32 -filetype=obj $< -o $@

$(BUILD_DIR)/%.wasm: $(BUILD_DIR)/%.o $(libo)
	@echo "Building $@"
	@$(LD) --no-entry --export-all $^ -o $@

$(BUILD_DIR)/%.wat: $(BUILD_DIR)/%.wasm
	@echo "Building $@"
	@wasm2wat $^ -o $@
	@./../../patch.sh $@

$(BUILD_DIR)/%.yml: %.yml
	@cp -v $< $@

$(BUILD_DIR)/lib/%.bc: $(LIB)/%.c
	@mkdir -p $(dir $@)
	@echo "Building $@"
	@$(CC) $(CFLAGS) -o $@ $^ > /dev/null 2>&1

$(BUILD_DIR)/lib/%.o: $(BUILD_DIR)/lib/%.bc
	@echo "Building $@"
	@opt -O1 $< -o $<
	@llc -O1 -march=wasm32 -filetype=obj $< -o $@

clean:
	@echo "rm -rf $(BUILD_DIR)"; rm -rf $(BUILD_DIR)
